# Configuration pytest pour Hyperion

[tool:pytest]
DJANGO_SETTINGS_MODULE = hyperion.settings
python_files = tests.py test_*.py *_tests.py
python_classes = Test* *Tests
python_functions = test_*
testpaths = api
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --no-cov-on-fail
    --cov-branch
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
    --reuse-db
    --numprocesses=auto
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore:django.utils.translation.ugettext:DeprecationWarning
    ignore::django.utils.deprecation.RemovedInDjango40Warning
markers =
    unit: Marque les tests unitaires
    integration: Marque les tests d'intégration
    slow: Marque les tests lents
    webtest: Tests avec navigateur web
    django_db: Tests nécessitant l'accès à la base de données
    asyncio: Tests asynchrones
    
# Configuration de la couverture
[coverage:run]
source = api
omit = 
    */migrations/*
    */tests/*
    */venv/*
    */env/*
    manage.py
    conftest.py
    */__pycache__/*
    */settings/*
    */static/*
    */staticfiles/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
